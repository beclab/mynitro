# 第一阶段：构建阶段
# FROM nvidia/cuda:12.0.0-cudnn8-runtime-ubuntu22.04 AS builder
FROM nvidia/cuda:12.4.1-cudnn-runtime-ubuntu22.04 AS builder
MAINTAINER wangrongxiang

ENV TZ=Asia/Shanghai
RUN apt-get -y update && \
    apt-get install -y --no-install-recommends tzdata golang vim && \
    apt-get install -y --no-install-recommends curl sudo git build-essential cmake && \
    apt-get install -y --no-install-recommends libjsoncpp-dev uuid-dev ca-certificates && \
    apt-get install -y --no-install-recommends g++ libssl-dev zlib1g-dev libpq-dev libmysqlclient-dev && \
    apt-get install -y --no-install-recommends nvidia-cuda-toolkit && \
    apt-get autoremove && \
    rm -rf /var/lib/apt/lists/*
RUN git config --global http.sslverify false && \
    git config --global https.sslverify false && \
    git clone --recurse https://github.com/janhq/nitro

WORKDIR /nitro
RUN ./install_deps.sh

RUN mkdir build
WORKDIR build
RUN cmake -DLLAMA_CUBLAS=ON ..
RUN make -j $(nproc)

WORKDIR /
COPY . ./
RUN go build -o mynitro

# 第二阶段：最终镜像
#FROM nvidia/cuda:12.0.0-cudnn8-runtime-ubuntu22.04
#FROM alpine:3.14
FROM ubuntu:22.04

# 设置时区
#ENV TZ=Asia/Shanghai

# 拷贝第一阶段构建的结果
COPY --from=builder /nitro/build/nitro /nitro/build/nitro

# 安装所需的软件包
#    apt-get install -y --no-install-recommends golang && \
#    apt-get install -y --no-install-recommends nvidia-cuda-toolkit && \
RUN apt-get -y update && \
    apt-get install -y --no-install-recommends curl ca-certificates && \
    apt-get autoremove && \
    rm -rf /var/lib/apt/lists/*

# 设置工作目录和其他操作
WORKDIR /
COPY docker3.sh .
COPY main.go .
COPY handler handler
COPY model_config model_config
COPY static static
COPY whisper_model_config whisper_model_config
# COPY . ./
COPY --from=builder mynitro mynitro
# COPY --from=builder usr/lib/x86_64-linux-gnu/libcuda.so.1 usr/lib/x86_64-linux-gnu/libcuda.so.1
# COPY --from=builder usr/lib/x86_64-linux-gnu/libcudart.so.12.0.2.224 usr/lib/x86_64-linux-gnu/libcudart.so.12.0.2.224
# COPY --from=builder usr/lib/x86_64-linux-gnu/libcublas.so.12.2.224 usr/lib/x86_64-linux-gnu/libcublas.so.12.2.224
# COPY --from=builder usr/lib/x86_64-linux-gnu/libcublasLt.so.12.2.224 usr/lib/x86_64-linux-gnu/libcublasLt.so.12.2.224
COPY --from=builder usr/lib/x86_64-linux-gnu/libcu* usr/lib/x86_64-linux-gnu/
#COPY --from=builder usr/local/cuda-12.0/targets/x86_64-linux/lib usr/local/cuda-12.0/targets/x86_64-linux/lib
#COPY --from=builder usr/local/bin usr/local/bin
RUN mkdir model
#RUN go build -o mynitro

ENV GGML_METAL_PATH_RESOURCES="/usr/local/bin"

EXPOSE 3928
EXPOSE 3900

RUN chmod +x docker3.sh

# 设置容器启动命令
ENTRYPOINT ["./docker3.sh"]